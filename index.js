(()=>{"use strict";var e=document.querySelector(".popup_profile"),t=document.querySelector(".popup__form_profile"),n=(document.querySelector(".popup_avatar"),document.querySelector(".popup__form_avatar")),r=e.querySelector(".popup__input_type_name"),o=e.querySelector(".popup__input_type_spec"),i=document.querySelector(".popup_new-card"),a=document.querySelector(".popup__form_new-card"),c=(i.querySelector(".popup__input_type_title"),i.querySelector(".popup__input_type_link"),document.querySelector(".profile__edit-avatar")),s=document.querySelector(".profile__add-button"),u=document.querySelector(".profile__edit-button"),l=(document.querySelectorAll(".popup__button-close"),{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button-submit",inactiveButtonClass:"popup__button-submit_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"});function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var p=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];t?this._container.append(e):this._container.prepend(e)}}])&&f(t.prototype,n),e}();function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var d=function(){function e(t){var n=this,r=t.link,o=t.title,i=t.owner,a=t.thisUser,c=t.likes,s=t.cardId,u=t.cardSelector,l=t.handleCardClick,f=t.handleHeartClick,p=t.handleTrashClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),_(this,"_revertHeart",(function(e){var t=n._elementHeart.classList.contains("element__heart_active");n._elementHeart.classList.toggle("element__heart_active"),n._elementLikes.textContent=n._likes.length+(t?-1:1),n._handleHeartClick(n.cardId,t,n)})),_(this,"_trashClick",(function(e){n._handleTrashClick(n)})),this._cardSelector=u,this._image=r,this._title=o,this._owner=i,this._thisUser=a,this._likes=c,this.cardId=s,this._cardTemplate=document.querySelector(this._cardSelector),this._handleCardClick=l,this._handleHeartClick=f,this._handleTrashClick=p}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this._cardTemplate.content.querySelector(".element").cloneNode(!0)}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"_setEventListeners",value:function(){this._elementHeart.addEventListener("click",this._revertHeart),this._elementTrash.addEventListener("click",this._trashClick),this._imageElement.addEventListener("click",this._handleCardClick)}},{key:"likesUpdate",value:function(e){this._likes=e,this._checkHeart()}},{key:"_checkHeart",value:function(){var e=this;this._element.querySelector(".element__likes-count").textContent=this._likes.length,-1!==this._likes.findIndex((function(t){return t._id==e._thisUser}))&&this._elementHeart.classList.add("element__heart_active")}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._elementHeart=this._element.querySelector(".element__heart"),this._elementTrash=this._element.querySelector(".element__trash"),this._elementLikes=this._element.querySelector(".element__likes-count"),this._imageElement=this._element.querySelector(".element__image"),this._imageElement.src=this._image,this._element.querySelector(".element__text").textContent=this._title,this._owner!==this._thisUser&&this._element.querySelector(".element__trash").classList.add("element__trash_disable"),this._checkHeart(),this._setEventListeners(),this._element}}])&&h(t.prototype,n),e}();function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var v=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),y(this,"_hasInvalidInput",(function(e){return e.some((function(e){return!e.validity.valid}))})),y(this,"_toggleButtonState",(function(e,t,n){r._hasInvalidInput(e)?(t.classList.add(n.inactiveButtonClass),t.disabled=!0):(t.classList.remove(n.inactiveButtonClass),t.disabled=!1)})),y(this,"_hideInputError",(function(e,t,n){var r=e.querySelector("#".concat(t.id,"-error"));t.classList.remove(n.inputErrorClass),r.classList.remove(n.errorClass),r.textContent=""})),y(this,"_showInputError",(function(e,t,n,r){var o=e.querySelector("#".concat(t.id,"-error"));t.classList.add(r.inputErrorClass),o.textContent=n,o.classList.add(r.errorClass)})),y(this,"_checkInputValidity",(function(e,t,n){t.validity.valid?r._hideInputError(e,t,n):r._showInputError(e,t,t.validationMessage,n)})),y(this,"_setEventListeners",(function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);r._toggleButtonState(n,o,t),n.forEach((function(i){i.addEventListener("input",(function(){r._checkInputValidity(e,i,t),r._toggleButtonState(n,o,t)}))}))})),y(this,"clearFormErrors",(function(){r._checkValidation(r._checkingForm,r._settings)})),y(this,"enableValidation",(function(){r._checkingForm.addEventListener("submit",(function(e){e.preventDefault()})),r._setEventListeners(r._checkingForm,r._settings)})),this._settings=t,this._checkingForm=n}var t,n;return t=e,(n=[{key:"_checkValidation",value:function(e,t){var n=this,r=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);this._toggleButtonState(r,o,t),r.forEach((function(r){n._hideInputError(e,r,t)}))}}])&&m(t.prototype,n),e}();function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var g=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=t,this._popupForm=document.querySelector(this._formSelector),this._closeButton=this._popupForm.querySelector(".popup__button-close"),this.setEventListeners(),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupForm.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupForm.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){e.close()})),this._popupForm.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()}))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}}])&&b(t.prototype,n),e}();function k(e){return(k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(e,t,n){return(E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function C(e,t){return(C=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function w(e,t){return!t||"object"!==k(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function O(e){return(O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&C(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupImagePhoto=t._popupForm.querySelector(".popup__image"),t._popupImageTitle=t._popupForm.querySelector(".popup__image-title"),t}return t=a,(n=[{key:"open",value:function(e){this._popupImagePhoto.src=e.src,this._popupImageTitle.textContent=e.textContent,E(O(a.prototype),"open",this).call(this)}}])&&S(t.prototype,n),a}(g);function L(e){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t,n){return(I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function x(e,t){return(x=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){return!t||"object"!==L(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function P(e){return(P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&x(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e){var t,n=e.handleFormSubmit,r=e.formSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,r))._handleFormSubmit=n,t._element=t._popupForm.querySelector(".popup__form"),t._submitButton=t._element.querySelector(".popup__button-submit"),t._setEventListeners(),t}return t=a,(n=[{key:"close",value:function(){this._element.reset(),I(P(a.prototype),"close",this).call(this)}},{key:"setButtonText",value:function(e){this._submitButton.textContent=e}},{key:"getButtonText",value:function(){return this._submitButton.textContent}},{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._element.querySelectorAll(".popup__input"),this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"_setEventListeners",value:function(){var e=this;this._element.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}}])&&q(t.prototype,n),a}(g);function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t){var n=t.nameSelector,r=t.specSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._specElement=document.querySelector(r),this._avatarElement=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{profileName:this._nameElement.textContent,profileSpec:this._specElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.userName,n=e.userSpec;this._nameElement.textContent=t,this._specElement.textContent=n}},{key:"setUserAvatar",value:function(e){this._avatarElement.src=e}}])&&B(t.prototype,n),e}();function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialCards",value:function(){var e=this;return fetch(this._baseUrl+"cards",{headers:this._headers}).then((function(t){return e._getResponseData(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch(this._baseUrl+"users/me",{headers:this._headers}).then((function(t){return e._getResponseData(t)}))}},{key:"setUserInfo",value:function(e){var t=this;return fetch(this._baseUrl+"users/me",{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e.name,about:e.spec})}).then((function(e){return t._getResponseData(e)}))}},{key:"setUserAvatar",value:function(e){var t=this;return fetch(this._baseUrl+"users/me/avatar",{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e.link})}).then((function(e){return t._getResponseData(e)}))}},{key:"setNewCard",value:function(e){var t=this;return fetch(this._baseUrl+"cards",{headers:this._headers,method:"POST",body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return t._getResponseData(e)}))}},{key:"delCard",value:function(e){var t=this;return fetch(this._baseUrl+"cards/"+e.cardId,{headers:this._headers,method:"DELETE"}).then((function(e){return t._getResponseData(e)}))}},{key:"reverseLike",value:function(e,t){var n=this;return fetch(this._baseUrl+"cards/likes/"+e,{headers:this._headers,method:t?"DELETE":"PUT"}).then((function(e){return n._getResponseData(e)}))}}])&&F(t.prototype,n),e}(),H="",A=new T(".popup_image"),V=new D({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-19/",headers:{authorization:"d1e1c4f1-84e7-4d89-bcad-9b9b9cbdb035","Content-Type":"application/json"}}),N=new U({formSelector:".popup_profile",handleFormSubmit:function(e){var t=N.getButtonText();N.setButtonText("Сохранение.."),V.setUserInfo(e).then((function(e){G.setUserInfo({userName:e.name,userSpec:e.about}),N.close()})).catch((function(e){console.log(e)})).finally((function(){N.setButtonText(t)}))}}),J=new U({formSelector:".popup_avatar",handleFormSubmit:function(e){var t=J.getButtonText();J.setButtonText("Сохранение.."),V.setUserAvatar(e).then((function(e){G.setUserAvatar(e.avatar),J.close()})).catch((function(e){console.log(e)})).finally((function(){J.setButtonText(t)}))}}),z=new U({formSelector:".popup_new-card",handleFormSubmit:function(e){var t=z.getButtonText();z.setButtonText("Сохранение.."),V.setNewCard(e).then((function(e){var t=K(e);Y.addItem(t,!1),z.close()})).catch((function(e){console.log(e)})).finally((function(){z.setButtonText(t)}))}}),M=new U({formSelector:".popup_confirm",handleFormSubmit:function(e){var t=M.getButtonText();M.setButtonText("Удаление.."),V.delCard(M.cardObject).then((function(e){M.cardObject.deleteCard(),M.close(),M.cardObject=""})).catch((function(e){console.log(e)})).finally((function(){M.setButtonText(t)}))}}),G=new R({nameSelector:".profile__name",specSelector:".profile__spec",avatarSelector:".profile__avatar-img"});function K(e){return new d({link:e.link,title:e.name,owner:e.owner._id,thisUser:H,likes:e.likes,cardId:e._id,cardSelector:"#card",handleCardClick:function(e){var t={};t.src=e.target.src,t.textContent=e.target.closest(".element").querySelector(".element__text").textContent,A.open(t)},handleHeartClick:function(e,t,n){V.reverseLike(e,t).then((function(e){n.likesUpdate(e.likes)})).catch((function(e){console.log(e)}))},handleTrashClick:function(e){M.cardObject=e,M.open()}}).generateCard()}var Q=new v(l,t),W=new v(l,n),X=new v(l,a),Y=new p({renderer:function(e){var t=K(e);Y.addItem(t,!0)}},".elements__list");Promise.all([V.getUserInfo(),V.getInitialCards()]).then((function(e){H=e[0]._id,G.setUserInfo({userName:e[0].name,userSpec:e[0].about}),G.setUserAvatar(e[0].avatar),Y.renderItems(e[1])})).catch((function(e){console.log(e)})),u.addEventListener("click",(function(e){var t=G.getUserInfo();r.value=t.profileName,o.value=t.profileSpec,Q.clearFormErrors(),N.open()})),s.addEventListener("click",(function(){a.reset(),X.clearFormErrors(),z.open()})),c.addEventListener("click",(function(e){W.clearFormErrors(),J.open()})),Q.enableValidation(),W.enableValidation(),X.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,